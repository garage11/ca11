@import 'ca11/lib/mixins';
@import 'ca11/lib/variables';

.c-main {
    align-items: center;
    background-blend-mode: darken;
    background-size: cover;
    display: grid;
    grid-gap: calc(var(--space-4) / 4);
    grid-template-areas:
        'body-header body-header body-header'
        'body-gutter-left body-content body-gutter-right'
        'body-footer body-footer body-footer';

    grid-template-columns: $space-4 1fr $space-4;
    grid-template-rows: $space-4 1fr $space-4;
    height: 100vh;
    overflow: hidden;
    transition: background 2s;
    width: 100vw;

    @media screen and (min-width: $breakpoint-mobile) {
        grid-gap: calc(var(--space-4) / 2);
    }

    @media screen and (min-width: $breakpoint-desktop) {
        grid-gap: var(--space-4);
    }

    .btn-logout {
        grid-area: body-header;
    }

    .layer {
        align-items: center;
        display: flex;
        grid-area: body-content;
        height: calc(100vh - (var(--space-4) * 2));
        justify-content: center;

        @media screen and (min-width: $breakpoint-mobile) {
            height: calc(100vh - (var(--space-4) * 4));
        }

        &.grid {
            display: grid;
        }

        panel,
        content {
            max-height: 600px;
        }

        content {
            background: var(--bg-dark);
            border: var(--border) solid var(--bg-default);
            border-bottom-right-radius: var(--spacer);
            border-left: 0;
            border-top-right-radius: var(--spacer);
            flex: 1;
            grid-area: module-content;
            height: 100%;
            max-width: 600px;
            overflow-y: auto;
        }


        panel {
            background: var(--bg-default);
            border-bottom-left-radius: var(--spacer);
            border-top-left-radius: var(--spacer);
            display: flex;
            flex-direction: column;
            grid-area: module-panel;
            height: 100%;

            .actions {
                align-items: center;
                // Border in the same style as the scroll trackbar.
                color: var(--primary-base);
                flex: 1;
                flex-direction: column;
                width: var(--space-4);


                .action {
                    background: none;
                    border-bottom: 0;
                    border-bottom: $spacer-05 solid transparent;

                    &.active {
                        border-bottom: $spacer-05 solid var(--primary-base);

                        svg {
                            fill: var(--primary-base);
                        }
                    }

                    svg {
                        @include icon-size($spacer * 3);
                    }
                }
            }

            .filters {
                display: flex;
                flex: 1;
                flex-direction: column-reverse;
                margin-top: var(--spacer);

                .filter {
                    align-items: center;
                    color: var(--grey-400);
                    display: flex;
                    justify-content: center;
                    // Override .field's margin-bottom.
                    margin: 0;
                    margin-bottom: var(--spacer);
                    padding: 0;
                    user-select: none;

                    &:hover,
                    &.active {
                        color: var(--grey-200);

                        svg {
                            border: $spacer / 4 solid var(--primary-base);
                            fill: var(--primary-base);
                        }
                    }

                    &:hover {
                        cursor: pointer;
                    }

                    svg {
                        background: var(--grey-400);
                        border: $spacer / 4 solid var(--grey-200);
                        border-radius: 50%;
                        fill: var(--grey-100);
                        height: var(--icon-large);
                        padding: var(--spacer);
                        width: var(--icon-large);
                    }
                }
            }

            .tabs {
                .tab {
                    align-items: center;
                    background: none;
                    border-left: 0;
                    border-right: 0;
                    display: flex;
                    justify-content: center;
                    width: $space-4;

                    &.active {
                        border-bottom: $spacer-05 solid var(--primary-base);
                        color: var(--primary-base);
                    }

                    &.disabled {
                        opacity: 0.3;

                        &:hover {
                            cursor: not-allowed;
                        }
                    }
                }
            }
        }
    }


    &.splash-0 {
        background-image: url('/static/img/splash-0.jpg');
    }

    &.splash-1 {
        background-image: url('/static/img/splash-1.jpg');
    }

    &.splash-2 {
        background-image: url('/static/img/splash-2.jpg');
    }

    &.splash-3 {
        background-image: url('/static/img/splash-3.jpg');
    }

    &.splash-4 {
        background-image: url('/static/img/splash-4.jpg');
    }

    &.splash-5 {
        background-image: url('/static/img/splash-5.jpg');
    }

    &.splash-6 {
        background-image: url('/static/img/splash-6.jpg');
    }

    &__content {
        .main {
            padding-right: 0;
            width: 100%;
        }
    }


    .tr-caller-bar-leave-active,
    .tr-caller-bar-enter-active {
        transition: transform 0.3s ease;
    }

    // Animate out of screen.
    .tr-caller-bar-enter,
    .tr-caller-bar-leave-to {
        transform: translateY(#{-$space-4});
    }

    // Animate in screen.
    .tr-caller-bar-enter-to,
    .tr-caller-bar-leave {
        transform: translateY(0);
    }
}
